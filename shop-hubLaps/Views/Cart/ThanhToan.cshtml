@model shop_hubLaps.Models.DonHang 
@using Microsoft.AspNetCore.Identity
@using shop_hubLaps.Areas.Identity.Data
@inject UserManager<SampleUser> UserManager

@{
    ViewData["Title"] = "Chọn phương thức thanh toán";
}

<div class="container mt-4">
    <div class="row">
        <!-- Cột bên phải: Thông tin khách hàng -->
        <div class="col-md-6">
            <h3>Thông tin thanh toán</h3>
            <form method="post" action="@Url.Action("XacNhanDonHang", "Cart")">
                @{
                    var user = await UserManager.GetUserAsync(User);  // Use async to fetch user data
                }

                <div class="mb-3 row">
                    <div class="col-md-6">
                        <label class="form-label">First Name</label>
                        <input type="text" name="firstname" class="form-control rounded-3" value="@user?.FirstName" required />
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">Last Name</label>
                        <input type="text" name="lastname" class="form-control rounded-3" value="@user?.LastName" required />
                    </div>
                </div>
                <div class="mb-3">
                    <label class="form-label">Email</label>
                    <input type="email" name="email" class="form-control rounded-3" value="@user?.UserName" required />
                </div>
                <div class="mb-3">
                    <label class="form-label">Số điện thoại</label>
                    <input type="tel" name="sodienthoai" class="form-control rounded-3" value="@user?.PhoneNumber" required />
                </div>
                <div class="mb-3">
                    <label class="form-label">Địa chỉ</label>
                    <input type="text" name="diachi" class="form-control rounded-3" value="@user?.DiaChi" required />
                </div>
                <div id="errorMessage" style="color:red; display:none;">
                    <p>Vui lòng điền đầy đủ thông tin trước khi tiếp tục!</p>
                </div>
            </form>
        </div>

        <!-- Phương thức thanh toán -->
        <div class="col-lg-6 col-12">
            <h4>Thông tin sản phẩm</h4>
            <div class="table-responsive">
                <table class="table table-bordered">
                    <thead class="table-light">
                        <tr>
                            <th class="text-truncate">Tên sản phẩm</th>
                            <th>Số lượng</th>
                            <th>Đơn giá</th>
                            <th>Thành tiền</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.ChiTietDonHangs)
                        {
                            <tr>
                                <td class="text-truncate" style="max-width: 200px;" title="@item.Laptop.tenlaptop">@item.Laptop.tenlaptop</td>
                                <td>@item.soluong</td>
                                <td>@item.dongia.ToString("C")</td>
                                <td>@((item.dongia * item.soluong).ToString("C0", new System.Globalization.CultureInfo("vi-VN")))</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <h5 class="mt-3 text-right">Tổng giá trị: <strong>@Model.gia.ToString("C0", new System.Globalization.CultureInfo("vi-VN"))</strong></h5>

            @* <form method="post" action="@Url.Action("ThanhToanConfirm", "Cart")" onsubmit="return validatePaymentForm()">
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="paymentMethod" id="cod" value="COD" checked />
                    <label class="form-check-label" for="cod">
                        Thanh toán khi nhận hàng (COD)
                    </label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="paymentMethod" id="bankTransfer" value="BankTransfer" />
                    <label class="form-check-label" for="bankTransfer">
                        Chuyển khoản ngân hàng
                    </label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="paymentMethod" id="momo" value="Momo" />
                    <label class="form-check-label" for="momo">
                        Thanh toán qua Momo
                    </label>
                </div>
                <button type="submit" class="btn btn-primary mt-3">Xác nhận thanh toán</button>
            </form> *@
            <!-- Form thanh toán COD -->
            <form method="post" action="@Url.Action("ThanhToanConfirm", "Cart")" onsubmit="return validatePaymentForm()">
                <div class="form-check">
                    @* <input class="form-check-input" type="radio" name="paymentMethod" id="cod" value="COD" checked /> *@
                    <label class="form-check-label" for="cod">
                        Thanh toán khi nhận hàng (COD)
                    </label>
                </div>
                <button type="submit" class="btn btn-primary mt-3">Xác nhận thanh toán COD</button>
            </form>

            <!-- Form chuyển khoản ngân hàng -->
            <form method="post" action="@Url.Action("ThanhToanConfirm", "Cart")" onsubmit="return validatePaymentForm()">
                <div class="form-check">
                    @* <input class="form-check-input" type="radio" name="paymentMethod" id="bankTransfer" value="BankTransfer" /> *@
                    <label class="form-check-label" for="bankTransfer">
                        Chuyển khoản ngân hàng
                    </label>
                </div>
                <button type="submit" class="btn btn-primary mt-3">Xác nhận thanh toán qua chuyển khoản</button>
            </form>

         <!-- Form thanh toán qua Vnpay -->
        <form method="POST" action="/Cart/CreatePaymentUrlVnpay">
            <input type="hidden" name="Name" value="@User.Identity.Name" />
            <input type="hidden" name="Amount" value="@Model.gia" />
            <input type="hidden" name="OrderDescription" value="Thanh toán đơn hàng" />
            <input type="hidden" name="OrderType" value="other" />
            <button type="submit" class="btn btn-primary mt-3">Xác nhận thanh toán qua Vnpay</button>
        </form>
<form method="post" action="@Url.Action("StripePayment", "Cart")" id="payment-form">
    <div class="form-check">
        <label for="stripePayment">Thanh toán qua Stripe</label>
        <div id="card-element">
            <!-- Stripe sẽ render input thẻ tín dụng vào đây -->
        </div>
        <div id="card-errors" role="alert"></div>
    </div>

    <!-- Nhân giá trị @Model.gia với 100 để chuyển đổi từ VND sang cent -->
    <input type="hidden" name="amount" value="@(@Model.gia * 100)" />

    <button type="submit" class="btn btn-primary mt-3">Thanh toán qua Stripe</button>
</form>


        </div>
    </div>
</div>

<script src="https://js.stripe.com/v3/"></script>

<script>
        var stripe = Stripe('pk_test_51Qai30ALvOyqlJWEv04kz1Anob3IWy11u26wGQYtoWRmS1GbNEpXR6b2S7rRoTgtI9AmQC2khe51yHJQ6GFXIfqB00m2RVYN40');
        var elements = stripe.elements();
        var card = elements.create('card');
        card.mount('#card-element');

        var form = document.getElementById('payment-form');
        form.addEventListener('submit', function(event) {
            event.preventDefault();

            stripe.createToken(card).then(function(result) {
                if (result.error) {
                    // Hiển thị lỗi nếu có
                    var errorElement = document.getElementById('card-errors');
                    errorElement.textContent = result.error.message;
                } else {
                    // Lấy token Stripe và gửi form
                    var tokenInput = document.createElement('input');
                    tokenInput.setAttribute('type', 'hidden');
                    tokenInput.setAttribute('name', 'stripeToken');
                    tokenInput.setAttribute('value', result.token.id);
                    form.appendChild(tokenInput);

                    form.submit();  // Gửi form sau khi có token
                }
            });
        });

  // Timer for session timeout (optional)
        let timer;
        function updateTime() {
            timer = setTimeout(function() {
                alert("Phiên làm việc của bạn đã hết hạn. Vui lòng đăng nhập lại!");
                window.location.href = "/Account/Login"; 
            }, 600000); // Timeout after 10 minutes (600000 ms)
        }
        window.onload = updateTime;
        document.addEventListener('click', updateTime);
        document.addEventListener('keypress', updateTime);
</script>


