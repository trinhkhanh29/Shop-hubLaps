@model shop_hubLaps.Models.DonHang 
@using Microsoft.AspNetCore.Identity
@using shop_hubLaps.Areas.Identity.Data
@inject UserManager<SampleUser> UserManager

@{
    ViewData["Title"] = "Chọn phương thức thanh toán";
}

<div class="container mt-4">
    <div class="row">
        <!-- Cột bên phải: Thông tin khách hàng -->
        <div class="col-md-6">
            <h3>Thông tin thanh toán</h3>
            <form method="post" action="@Url.Action("XacNhanDonHang", "Cart")">
                @{
                    var user = await UserManager.GetUserAsync(User);  // Use async to fetch user data
                }

                <div class="mb-3 row">
                    <div class="col-md-6">
                        <label class="form-label">First Name</label>
                        <input type="text" name="firstname" class="form-control rounded-3" value="@user?.FirstName" required />
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">Last Name</label>
                        <input type="text" name="lastname" class="form-control rounded-3" value="@user?.LastName" required />
                    </div>
                </div>
                <div class="mb-3">
                    <label class="form-label">Email</label>
                    <input type="email" name="email" class="form-control rounded-3" value="@user?.UserName" required />
                </div>
                <div class="mb-3">
                    <label class="form-label">Số điện thoại</label>
                    <input type="tel" name="sodienthoai" class="form-control rounded-3" value="@user?.PhoneNumber" required />
                </div>
                <div class="mb-3">
                    <label class="form-label">Địa chỉ</label>
                    <input type="text" name="diachi" class="form-control rounded-3" value="@user?.DiaChi" required />
                </div>
                <div id="errorMessage" style="color:red; display:none;">
                    <p>Vui lòng điền đầy đủ thông tin trước khi tiếp tục!</p>
                </div>
            </form>
        </div>

        <!-- Phương thức thanh toán -->
        <div class="col-lg-6 col-12">
            <h4>Thông tin sản phẩm</h4>
            <div class="table-responsive">
                <table class="table table-bordered">
                    <thead class="table-light">
                        <tr>
                            <th class="text-truncate">Tên sản phẩm</th>
                            <th>Số lượng</th>
                            <th>Đơn giá</th>
                            <th>Thành tiền</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.ChiTietDonHangs)
                        {
                            <tr>
                                <td class="text-truncate" style="max-width: 200px;" title="@item.Laptop.tenlaptop">@item.Laptop.tenlaptop</td>
                                <td>@item.soluong</td>
                                <td>@item.dongia.ToString("C0", new System.Globalization.CultureInfo("vi-VN"))</td>
                                <td>@((item.dongia * item.soluong).ToString("C0", new System.Globalization.CultureInfo("vi-VN")))</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <h5 class="mt-3 text-right">Tổng giá trị: <strong>@Model.gia.ToString("C0", new System.Globalization.CultureInfo("vi-VN"))</strong></h5>

            <form method="post" action="@Url.Action("ThanhToanConfirm", "Cart")">
                <h6 class="mb-4">Vui lòng chọn hình thức thanh toán:</h6>
                <!-- Thanh toán COD -->
                <div class="form-check mb-3">
                    <input class="form-check-input" type="radio" name="paymentMethod" id="cod" value="COD" checked>
                    <label class="form-check-label" for="cod">Thanh toán khi nhận hàng (COD)</label>
                </div>
                <!-- Chuyển khoản ngân hàng -->
                <div class="form-check mb-3">
                    <input class="form-check-input" type="radio" name="paymentMethod" id="bankTransfer" value="BankTransfer">
                    <label class="form-check-label" for="bankTransfer">Chuyển khoản ngân hàng</label>
                </div>

                <!-- Thanh toán qua VNPay -->
                <div class="form-check mb-3">
                    <input class="form-check-input" type="radio" name="paymentMethod" id="vnpay" value="Vnpay">
                    <input type="hidden" name="Name" value="@User.Identity.Name" />
                    <input type="hidden" name="Amount" value="@Model.gia" />
                    <input type="hidden" name="OrderDescription" value="Thanh toán đơn hàng" />
                    <input type="hidden" name="OrderType" value="other" />
                    <label class="form-check-label" for="vnpay">
                        Ví <img src="~/img/vnpay.svg" style="width: 100px;" alt="VNPAY Logo" />
                    </label>
                </div>
                @* <div class="form-check">
                    <label for="stripePayment">Thanh toán qua Stripe</label>
                    <div id="card-element">
                        <!-- Stripe sẽ render input thẻ tín dụng vào đây -->
                    </div>
                    <div id="card-errors" role="alert"></div>
                    <input type="hidden" name="amount" value="@(@Model.gia * 100)" />
                    <button type="submit" class="btn btn-primary mt-3">Thanh toán qua Stripe</button>
                </div> *@

                <button type="submit" class="btn btn-primary mt-3">Xác nhận thanh toán</button>
            </form>

        </div>
    </div>
</div>

@* <script src="https://js.stripe.com/v3/"></script> *@

<script>
    // document.addEventListener("DOMContentLoaded", function () {
    //     // Make sure the card element exists before trying to access it
    //     var stripe = Stripe('pk_test_51Qai30ALvOyqlJWEv04kz1Anob3IWy11u26wGQYtoWRmS1GbNEpXR6b2S7rRoTgtI9AmQC2khe51yHJQ6GFXIfqB00m2RVYN40');
    //     var elements = stripe.elements();
    //     var card = elements.create('card');
    //     var cardElement = document.getElementById('card-element'); // Ensure card-element is in the DOM

    //     if (cardElement) {
    //         card.mount(cardElement); // Mount only if cardElement is found
    //     } else {
    //         console.error("Card element not found in the DOM.");
    //     }

    //     var form = document.getElementById('payment-form');
    //     if (form) {
    //         form.addEventListener('submit', function (event) {
    //             event.preventDefault();

    //             stripe.createToken(card).then(function (result) {
    //                 if (result.error) {
    //                     // Show error if any
    //                     var errorElement = document.getElementById('card-errors');
    //                     errorElement.textContent = result.error.message;
    //                 } else {
    //                     // Get the Stripe token and submit the form
    //                     var tokenInput = document.createElement('input');
    //                     tokenInput.setAttribute('type', 'hidden');
    //                     tokenInput.setAttribute('name', 'stripeToken');
    //                     tokenInput.setAttribute('value', result.token.id);
    //                     form.appendChild(tokenInput);

    //                     form.submit();  // Submit the form after adding the token
    //                 }
    //             });
    //         });
    //     } else {
    //         console.error("Payment form not found in the DOM.");
    //     }
    // });
</script>


