@model IEnumerable<Laptop>
@using shop_hubLaps.Views.Laptop

<div class="row d-flex flex-wrap justify-content-start" id="laptopContainer">
    @foreach (var laptop in Model)
    {
        <div class="col-12 col-sm-6 col-md-5 col-lg-4 mb-4 box-container">
            <div class="card h-100 box-card">
                <a class="card-img" href="/Home/Details?malaptop=@laptop.malaptop" title="@laptop.tenlaptop" style="height:250px">

                    <img src="@laptop.hinh" class="card-img-top" alt="@laptop.tenlaptop">
                </a>
                <div class="card-body">
                    <h5 class="card-title">
                        <a href="/Home/Details?malaptop=@laptop.malaptop" class="text-limit">
                            @(@laptop.tenlaptop.Length > 30 ? laptop.tenlaptop.Substring(0, 39) + "..." : laptop.tenlaptop)
                        </a>
                    </h5>

                    <div class="price">
                        <strong>
                            @laptop.giaban?.ToString("C0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))
                        </strong>
                        @if (laptop.giaban.HasValue)
                        {
                            <strike>
                                @(laptop.giaban.HasValue ? (laptop.giaban.Value * 1.2m).ToString("C0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN")) : null)
                            </strike>
                        }
                    </div>
                    <!-- Thông số kỹ thuật -->
                    <div class="specs" style="display: flex;flex-wrap: wrap;gap: 16px;justify-content: space-between;">
                        <ul class="list-unstyled">
                            <li>
                                <i class="bi bi-cpu"></i>
                                @(LaptopAttributes.CpuNames.ContainsKey(laptop.cpu) ? LaptopAttributes.CpuNames[laptop.cpu] : laptop.cpu)
                            </li>
                            <li>
                                <svg fill="#000000" width="20px" height="20px" viewBox="0 0 1069 1069" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2;" version="1.1" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:serif="http://www.serif.com/" xmlns:xlink="http://www.w3.org/1999/xlink">
                                <rect height="1066.67" id="Vga-computer-alt2" style="fill:none;" width="1066.67" x="1.117" y="0.592"></rect><g>
                                <path d="M818.374,339.599c0.385,-0.014 0.774,-0.021 1.164,-0.021c-0,0 43.86,0 43.86,0c31.553,-0 61.813,12.534 84.124,34.846c22.311,22.311 34.846,52.571 34.845,84.124c0,80.892 0,200.34 0,281.231c0.001,31.553 -12.534,61.814 -34.845,84.125c-22.311,22.311 -52.572,34.846 -84.125,34.845l-366.5,0c-17.259,0 -31.25,-13.991 -31.25,-31.25c0,-17.258 13.992,-31.25 31.25,-31.25c17.073,0 33.229,-7.723 43.951,-21.013l52.597,-65.196c22.585,-27.994 56.623,-44.268 92.592,-44.268l45.782,-0c14.976,-0 29.339,-5.95 39.929,-16.54c10.591,-10.59 16.54,-24.953 16.54,-39.93l-0,-207.203l-69.709,0c-17.247,0 -31.25,-14.002 -31.25,-31.25c-0,-17.247 14.003,-31.25 31.25,-31.25l99.795,0Zm-214.175,456.65l37.888,-46.964c10.722,-13.289 26.877,-21.012 43.949,-21.013c0.003,-0 45.783,-0 45.783,-0c31.552,-0 61.813,-12.534 84.124,-34.846c22.311,-22.311 34.845,-52.571 34.845,-84.124l-0,-207.224l12.61,0c14.977,0 29.34,5.949 39.93,16.54c10.59,10.59 16.539,24.953 16.539,39.93l0,281.232c0,14.977 -5.949,29.34 -16.539,39.93c-10.59,10.59 -24.954,16.54 -39.93,16.539l-259.199,0Zm-194.748,-491.491c-126.481,0 -229.167,102.686 -229.167,229.167c-0,126.481 102.686,229.167 229.167,229.167c126.48,-0 229.166,-102.686 229.166,-229.167c0,-126.481 -102.686,-229.167 -229.166,-229.167Zm-0,62.5c91.985,0 166.666,74.681 166.666,166.667c0,91.986 -74.681,166.667 -166.666,166.667c-91.986,-0 -166.667,-74.681 -166.667,-166.667c-0,-91.986 74.681,-166.667 166.667,-166.667Z" style="fill-opacity:0.5;"></path>
                                <path d="M850.788,323.684c-0,-30.389 -12.072,-59.534 -33.561,-81.023c-21.489,-21.488 -50.633,-33.561 -81.023,-33.561c-135.02,0 -400.066,0 -535.087,0c-63.282,0 -114.583,51.301 -114.583,114.584c-0,111.691 -0,308.791 -0,420.482c0,63.283 51.3,114.583 114.583,114.583l297.878,0c34.644,0 67.427,-15.674 89.18,-42.637l55.23,-68.459c9.887,-12.257 24.789,-19.381 40.536,-19.381l52.264,-0c63.283,-0.001 114.583,-51.301 114.583,-114.584l-0,-290.004Zm-62.5,-0l-0,290.004c-0,28.765 -23.318,52.083 -52.082,52.084c-0.003,-0 -52.264,-0 -52.264,-0c-34.646,0 -67.429,15.675 -89.181,42.637l-55.23,68.46c-9.887,12.255 -24.788,19.38 -40.535,19.38c-0.003,0 -297.879,0 -297.879,0c-28.765,-0.001 -52.082,-23.318 -52.083,-52.081c-0,-0.004 -0,-420.484 -0,-420.484c0.001,-28.766 23.319,-52.084 52.083,-52.084c135.021,0 400.067,0 535.087,0c13.814,0 27.061,5.488 36.829,15.255c9.767,9.768 15.255,23.016 15.255,36.829Zm-397.652,241.521c0.789,2.955 1.199,6.025 1.199,9.138c-0,0.009 -0,0.018 -0,0.026c-0,9.403 -3.736,18.42 -10.384,25.069c-6.649,6.648 -15.666,10.383 -25.069,10.383l-0.026,0c-9.403,0 -18.42,-3.735 -25.069,-10.383c-12.195,-12.196 -31.998,-12.196 -44.194,-0c-12.196,12.196 -12.196,31.998 0,44.194c18.37,18.37 43.284,28.689 69.263,28.689l0.026,0c25.979,0 50.893,-10.319 69.263,-28.689c18.37,-18.37 28.69,-43.284 28.69,-69.263c-0,-0.008 -0,-0.017 -0,-0.026c-0,-13.724 -2.88,-27.15 -8.305,-39.47c2.123,-2.09 4.519,-3.921 7.143,-5.436c0.008,-0.005 0.016,-0.009 0.023,-0.014c8.143,-4.701 17.82,-5.975 26.902,-3.542c9.082,2.434 16.826,8.376 21.527,16.519c0.004,0.007 0.009,0.015 0.013,0.023c4.701,8.142 5.975,17.819 3.542,26.901c-4.464,16.66 5.437,33.81 22.097,38.274c16.66,4.464 33.809,-5.438 38.273,-22.097c6.724,-25.094 3.204,-51.83 -9.785,-74.328c-0.005,-0.008 -0.009,-0.016 -0.014,-0.023c-12.989,-22.499 -34.383,-38.915 -59.477,-45.639c-25.093,-6.724 -51.83,-3.204 -74.328,9.786c-0.007,0.004 -0.015,0.008 -0.023,0.013c-11.829,6.83 -21.977,15.983 -29.921,26.779c-3.017,-0.795 -5.943,-1.992 -8.694,-3.58c-0.007,-0.004 -0.015,-0.009 -0.023,-0.013c-8.143,-4.701 -14.084,-12.445 -16.518,-21.527c-2.433,-9.082 -1.159,-18.759 3.542,-26.902c0.004,-0.007 0.009,-0.015 0.013,-0.023c4.701,-8.143 12.445,-14.084 21.527,-16.518c16.66,-4.464 26.561,-21.613 22.097,-38.273c-4.464,-16.66 -21.614,-26.561 -38.273,-22.097c-25.094,6.724 -46.488,23.14 -59.477,45.638c-0.005,0.008 -0.009,0.016 -0.014,0.023c-12.989,22.498 -16.509,49.235 -9.785,74.328c6.724,25.094 23.14,46.488 45.638,59.477c0.008,0.005 0.016,0.009 0.023,0.014c11.957,6.903 25.111,11.132 38.578,12.569Z"></path>
                                                            </g>
                                                        </svg>
                                @(LaptopAttributes.CpuNames.ContainsKey(laptop.gpu) ? LaptopAttributes.CpuNames[laptop.gpu] : laptop.gpu)
                            </li>
                            <li>
                                <i class="bi bi-memory"></i>
                                @(LaptopAttributes.RamSizes.ContainsKey(laptop.ram) ? LaptopAttributes.RamSizes[laptop.ram] : laptop.ram)
                            </li>
                            <li>
                                <i class="bi bi-hdd"></i>
                                @(LaptopAttributes.HardwareTypes.ContainsKey(laptop.hardware) ? LaptopAttributes.HardwareTypes[laptop.hardware] : laptop.hardware)
                            </li>
                            <li>
                                <i class="bi bi-display"></i>
                                @(LaptopAttributes.ScreenSizes.ContainsKey(laptop.manhinh) ? LaptopAttributes.ScreenSizes[laptop.manhinh] : laptop.manhinh)
                            </li>
                            <li>
                                <i class="fa-solid fa-battery-three-quarters"></i>
                                @(LaptopAttributes.ScreenSizes.ContainsKey(laptop.pin) ? LaptopAttributes.ScreenSizes[laptop.pin] : laptop.pin)
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    }
</div>