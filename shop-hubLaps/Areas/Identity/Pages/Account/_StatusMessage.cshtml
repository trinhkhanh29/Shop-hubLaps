@{
    string message = TempData["StatusMessage"]?.ToString();
    string messageType = null;

    if (!string.IsNullOrEmpty(TempData["StatusMessage"]?.ToString()))
    {
        messageType = "success";
    }
    else if (!string.IsNullOrEmpty(TempData["ErrorMessage"]?.ToString()))
    {
        message = TempData["ErrorMessage"].ToString();
        messageType = "error";
    }
    else if (!string.IsNullOrEmpty(TempData["WarningMessage"]?.ToString()))
    {
        message = TempData["WarningMessage"].ToString();
        messageType = "warning";
    }
}


@if (!string.IsNullOrEmpty(message))
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const showMessage = (message, type) => {
                let container = document.querySelector(".message-container");
                if (!container) {
                    container = document.createElement("div");
                    container.className = "message-container";
                    document.body.appendChild(container);
                }

                const messageBox = document.createElement("div");
                messageBox.className = `message-box message-box-${type}`;
                messageBox.innerHTML = `
                             <i class="fa ${type === "success" ? "fa-check-circle" : (type === "error" ? "fa-exclamation-circle" : "fa-exclamation-triangle")}"></i>
                             <span>${message}</span>
                             <button class="close-alert">&times;</button>
                         `;

                messageBox.querySelector(".close-alert").addEventListener("click", () => {
                    messageBox.remove();
                });

                container.appendChild(messageBox);

                setTimeout(() => {
                    messageBox.remove();
                }, 5000);
            };

            showMessage('@message', '@messageType');
        });
    </script>
}
<head>

</head>
<style>
    .message-container {
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 1000;
        display: flex;
        flex-direction: column;
        gap: 10px;
    }

    .message-box {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 10px 15px;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
        animation: fadeIn 0.3s ease-out;
        background-color: #fff;
        color: #333;
        font-size: 14px;
    }

    .message-box-success {
        border-left: 4px solid #28a745;
        background-color: #d4edda;
        color: #155724;
    }

    .message-box-error {
        border-left: 4px solid #dc3545;
        background-color: #f8d7da;
        color: #721c24;
    }

    .message-box-warning {
        border-left: 4px solid #ffc107;
        background-color: #fff3cd;
        color: #856404;
    }

    .message-box i {
        margin-right: 10px;
    }

    .message-box .close-alert {
        background: none;
        border: none;
        color: inherit;
        font-size: 16px;
        cursor: pointer;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(-10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
</style>
